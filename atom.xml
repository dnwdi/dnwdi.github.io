<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  
  <title><![CDATA[dnwdi]]></title>
  <subtitle><![CDATA[言胜于行]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.dnwdi.com//"/>
  <updated>2015-08-11T06:07:09.720Z</updated>
  <id>http://www.dnwdi.com//</id>
  
  <author>
    <name><![CDATA[dnwdi]]></name>
    <email><![CDATA[1369773384@qq.coom]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[批量删除Redis的key]]></title>
    <link href="http://www.dnwdi.com/2015/08/11/redis-batch-del/"/>
    <id>http://www.dnwdi.com/2015/08/11/redis-batch-del/</id>
    <published>2015-08-11T06:06:05.000Z</published>
    <updated>2015-08-11T06:07:09.720Z</updated>
    <content type="html"><![CDATA[<pre><code>redis-<span class="keyword">cli</span> KEYS <span class="string">"yourkeys_*"</span> | xargs redis-<span class="keyword">cli</span> DEL
</code></pre><hr>
<p>Redis并没有提供批量删除记录的方法，这有时候很不方便，特别是重新初始化数据的时候。一般有两种做法：<br>如果业务场景明确，可以通过DBID进行区分，Redis默认的DBID是0，默认的配置文件是有16个DB，可以在应用中通过select方法指定数据库的ID进行存取。然后通过FlushDB命令能清空某个ID的数据库，达到重新初始化的目的。<br>如果某个ID的数据库已经有很多类型的记录了，无法整个库清空，那么就需要批量的删除key值，这时<strong>可以采用Linux管道</strong>，比如我要删除DBID为1的test开头的key值：</p>
<pre><code>[root@banping redis]# /banping/redis/src/redis-<span class="keyword">cli</span> -<span class="keyword">n</span> 1 keys “<span class="keyword">test</span>*” | xargs /banping/redis/src/redis-<span class="keyword">cli</span> -<span class="keyword">n</span> 1 del
(integer) 5095
</code></pre><p>把keys的输出作为del的输入，这样就批量删除了。<br>附redis-cli 命令：<br>redis-cli 2.4.2</p>
<pre><code>Usage: redis-cli [OPTIONS] [cmd [arg [arg ...]]]
-h Server hostname (default: 127.0.<span class="operator">0.<span class="number">1</span>)
-<span class="keyword">p</span> <span class="keyword">Server</span> port (<span class="keyword">default</span>: <span class="number">6379</span>)
-s <span class="keyword">Server</span> socket (overrides hostname <span class="keyword">and</span> port)
-a <span class="keyword">Password</span> <span class="keyword">to</span> <span class="keyword">use</span> <span class="keyword">when</span> connecting <span class="keyword">to</span> the <span class="keyword">server</span>
-r <span class="keyword">Execute</span> specified command <span class="keyword">N</span> times
-<span class="keyword">i</span> <span class="keyword">When</span> -r <span class="keyword">is</span> used, waits seconds per command.
It <span class="keyword">is</span> possible <span class="keyword">to</span> specify sub-<span class="keyword">second</span> times <span class="keyword">like</span> -<span class="keyword">i</span> <span class="number">0.1</span>.
-<span class="keyword">n</span> <span class="keyword">Database</span> <span class="built_in">number</span>
-x <span class="keyword">Read</span> <span class="keyword">last</span> argument <span class="keyword">from</span> STDIN
-<span class="keyword">d</span> Multi-<span class="keyword">bulk</span> delimiter <span class="keyword">in</span> <span class="keyword">for</span> <span class="keyword">raw</span> formatting (<span class="keyword">default</span>: \<span class="keyword">n</span>)
–<span class="keyword">raw</span> <span class="keyword">Use</span> <span class="keyword">raw</span> formatting <span class="keyword">for</span> replies (<span class="keyword">default</span> <span class="keyword">when</span> STDOUT <span class="keyword">is</span> <span class="keyword">not</span> a tty)
–latency Enter a special <span class="keyword">mode</span> continuously sampling latency.
–<span class="keyword">help</span> <span class="keyword">Output</span> this <span class="keyword">help</span> <span class="keyword">and</span> <span class="keyword">exit</span>
–<span class="keyword">version</span> <span class="keyword">Output</span> <span class="keyword">version</span> <span class="keyword">and</span> <span class="keyword">exit</span></span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<pre><code>redis-<span class="keyword">cli</span> KEYS <span class="string">"yourkeys_*"</span> | xargs redis-<span class="keyword">cli</spa]]>
    </summary>
    
      <category term="redis" scheme="http://www.dnwdi.com/tags/redis/"/>
    
      <category term="redis" scheme="http://www.dnwdi.com/categories/redis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[redis_error]]></title>
    <link href="http://www.dnwdi.com/2015/08/11/redis-error/"/>
    <id>http://www.dnwdi.com/2015/08/11/redis-error/</id>
    <published>2015-08-11T03:48:22.000Z</published>
    <updated>2015-08-11T03:50:40.540Z</updated>
    <content type="html"><![CDATA[<p>首先应该明白报这个错误说明了你用的<strong>jedis方法与redis服务器中存储数据的类型存在冲突</strong>。</p>
<p>例如：数据库中有一个key是usrInfo的数据存储的是Hash类型的，但是你使用jedis执行数据</p>
<p>操作的时候却使用了非Hash的操作方法，比如Sorted Sets里的方法。此时就会报</p>
<p><code>ERR Operation against a key holding the wrong kind of value</code></p>
<p>问题解决：</p>
<p>先执行一条如下命令，usrInfo为其中的一个key值。</p>
<pre><code>redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;type usrInfo
</code></pre><p>此时会显示出该key存储在现在redis服务器中的类型，例如：</p>
<pre><code>redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;hash
</code></pre><p>则表示key为usrInfo的数据是以hash类型存储在redis服务器里的，此时操作这个数据就必须使用hset、hget等操作方法。</p>
<p>如果是zset如下：</p>
<pre><code>redis <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">6379</span>&gt;zset
</code></pre><p>则表示数据类型为Sorted Sets的。此时就需要使用zadd、zrange等操作方法，否则就会报ERR Operation against a key holding the wrong kind of value这个错误！</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先应该明白报这个错误说明了你用的<strong>jedis方法与redis服务器中存储数据的类型存在冲突</strong>。</p>
<p>例如：数据库中有一个key是usrInfo的数据存储的是Hash类型的，但是你使用jedis执行数据</p>
<p>操作的时候却使用]]>
    </summary>
    
      <category term="redis" scheme="http://www.dnwdi.com/tags/redis/"/>
    
      <category term="redis" scheme="http://www.dnwdi.com/categories/redis/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Windows下搭建Github Blog]]></title>
    <link href="http://www.dnwdi.com/2015/08/07/blog-with-hexo/"/>
    <id>http://www.dnwdi.com/2015/08/07/blog-with-hexo/</id>
    <published>2015-08-07T06:15:41.000Z</published>
    <updated>2015-08-07T07:12:43.263Z</updated>
    <content type="html"><![CDATA[<p>第一次在github上搭建自己的博客，花了将近一天的时间，终于能出了一个像样的页面，现在将我搭建的过程记录一下，省的再走弯路。</p>
<p>一开始在网上搜教程，有好多讲用jekyll的，也让我记住了阮一峰这个人！这个是他写的教程：<a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html" target="_blank" rel="external">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门</a> 。在跑他这个例子的时候，我就花了好多时间==！主要的坑如下：</p>
<ol>
<li><p>使用UTF-8无BOM格式编码。由于我用的notepad++编辑器，默认编码是ANSI，所以会出现乱码情况</p>
</li>
<li><p>注意gh_pages分支和master分支的区别。在user pages如repo是dnwdi.github.io下的博客用master分支；<br>在project pages如repo是dnwdi.github.ioblog下的博客用gh_pages分支 </p>
</li>
</ol>
<p>最要命的一点是，当配置文件或者Liquid模板语言不小心写错了，git push上去之后，git会发一封build failed的邮件，但完全没有说明具体的出错地方，所以查错非常困难！这点无法容忍，所以最后虽然页面出来了，但不是想要的结果，有些liquid语言没有正确解析，也懒得调试了，直接放弃了</p>
<p>之后看到用Hexo搭建的教程，创建简单，可以本地调试，可以看到具体的出错地方，这点我觉得是最大的优点，有问题不要紧，至少要知道在哪改嘛！</p>
<p>参照的博客如下，写的都非常详尽！</p>
<ul>
<li><a href="http://www.isetsuna.com/categories/Hexo/" target="_blank" rel="external">Hexo博客系列</a></li>
<li><a href="http://ibruce.info/2013/11/22/hexo-your-blog/" target="_blank" rel="external">hexo你的博客</a></li>
<li><a href="http://segmentfault.com/a/1190000002592993" target="_blank" rel="external">Hexo 3.0 静态博客使用指南</a></li>
<li><a href="http://baoxiehao.com/2014/05/17/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96/" target="_blank" rel="external">Hexo博客优化</a></li>
</ul>
<p>由于hexo页面使用markdown语法，故附上我使用的markdown编辑器：</p>
<p><a href="https://www.zybuluo.com/mdeditor" target="_blank" rel="external">Cmd Markdown编辑器</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>第一次在github上搭建自己的博客，花了将近一天的时间，终于能出了一个像样的页面，现在将我搭建的过程记录一下，省的再走弯路。</p>
<p>一开始在网上搜教程，有好多讲用jekyll的，也让我记住了阮一峰这个人！这个是他写的教程：<a href="http://www.r]]>
    </summary>
    
      <category term="hexo" scheme="http://www.dnwdi.com/tags/hexo/"/>
    
      <category term="hexo" scheme="http://www.dnwdi.com/categories/hexo/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[这是一篇测试文章]]></title>
    <link href="http://www.dnwdi.com/2015/08/06/test/"/>
    <id>http://www.dnwdi.com/2015/08/06/test/</id>
    <published>2015-08-06T03:53:15.000Z</published>
    <updated>2015-08-06T03:59:05.702Z</updated>
    <content type="html"><![CDATA[<h1 id="我的博客正式开通啦！">我的博客正式开通啦！</h1><p><img src="http://7xkx7i.com1.z0.glb.clouddn.com/222211817.jpg" alt="此处输入图片的描述"></p>
<pre><code>public <span class="value">static</span> void <span class="function">main</span>(String<span class="attr_selector">[]</span> args){
    <span class="function">while</span>(<span class="function">isAlive</span>()){
        <span class="function">doStudy</span>();
    }
}
</code></pre><p><a href="http://dnwdi.github.io" target="_blank" rel="external">我的博客地址</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="我的博客正式开通啦！">我的博客正式开通啦！</h1><p><img src="http://7xkx7i.com1.z0.glb.clouddn.com/222211817.jpg" alt="此处输入图片的描述"></p>
<pre><code>public ]]>
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Hello World]]></title>
    <link href="http://www.dnwdi.com/2015/08/06/hello-world/"/>
    <id>http://www.dnwdi.com/2015/08/06/hello-world/</id>
    <published>2015-08-06T02:15:40.241Z</published>
    <updated>2015-08-06T02:15:40.241Z</updated>
    <content type="html"><![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="http://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick_Start">Quick Start</h2><h3 id="Create_a_new_post">Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run_server">Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate_static_files">Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy_to_remote_sites">Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="http://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>Welcome to <a href="http://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="http://hexo.io]]>
    </summary>
    
  </entry>
  
</feed>